image:
  repository: docker.subshell.com/sophora/sophora-image-update-service
  tag: "latest"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: sophora-image-update-service

javaOptions: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=80.0 -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem"

timeZone: "Europe/Berlin"

sophora:
  authentication:
    secret:
      name: ""
      passwordKey: "password"
      usernameKey: "username"

  # Represents the application.yml of image-update-service:
  configuration:
    sophora:
      client:
        server-connection:
          urls: [ ]
          username: # in secret
          password: # in secret
      image-service:
        s3-image-store:
          host: ""
          access-key-id: ${S3_ACCESS_KEY_ID}
          secret-access-key: ${S3_SECRET_ACCESS_KEY}
          bucket-name: ""
          create-bucket: false
        image-update-service: {}

s3:
  secret:
    name: ""
    accessKeyIdKey: "accessKeyId"
    secretAccessKeyKey: "secretAccessKey"

service:
  type: ClusterIP
  ClusterIP:
  httpPort: 8090

serviceAccount:
  create: false

serviceMonitor:
  enabled: false
  interval: 10s
  path: /actuator/prometheus

replicaCount: 1
resources:
  requests:
    memory: "2G"
    cpu: "2"
  limits:
    memory: "2G"
podAnnotations: {}

startupProbe:
  failureThreshold: 10
  initialDelaySeconds: 10
  timeoutSeconds: 3
  periodSeconds: 2

livenessProbe:
  failureThreshold: 1
  initialDelaySeconds: 1
  timeoutSeconds: 3
  periodSeconds: 60
