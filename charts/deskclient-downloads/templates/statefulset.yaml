apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "deskclient-downloads.fullname" . }}
  labels:
    {{- include "deskclient-downloads.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "deskclient-downloads.fullname" . }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "deskclient-downloads.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "deskclient-downloads.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: "contentdownloader"
          image: "{{ .Values.sophoraDownload.image.repository }}:{{ .Values.sophoraDownload.image.tag }}"
          imagePullPolicy: {{ .Values.sophoraDownload.image.pullPolicy }}
          env:
          - name: HTTP_USERNAME
            valueFrom:
              secretKeyRef:
                key: {{ .Values.sophoraDownload.usernameKey }}
                name: {{ .Values.sophoraDownload.secretName | quote }}
          - name: HTTP_PASSWORD
            valueFrom:
              secretKeyRef:
                key: {{ .Values.sophoraDownload.passwordKey }}
                name: {{ .Values.sophoraDownload.secretName | quote }}
          command: ["/bin/sh"]
          args:
            - "-c"
            - |-
              mkdir dl;
              cd dl;

              EXISTING="$(cat /deskclients/version.txt)"
              if [ "$EXISTING" = "{{ .Values.sophoraDownload.version }}" ]; then
                echo "Not downloading updatesite and deskclients - current version already present."
              else
                echo "Version {{ .Values.sophoraDownload.version }} not present. Removing old updatesite and DeskClient versions and downloading new version."
                rm -rf /updatesite
                rm -rf /deskclients

                echo "Downloading and copying updatesite content"
                wget --user="${HTTP_USERNAME}" --password="${HTTP_PASSWORD}" {{ include "deskclient-downloads.updatesiteUrl" . }} --verbose;
                unzip -q *.zip; rm *.zip;
                mv ./* /updatesite;
                echo "Finished downloading and copying updatesite content"

                echo "Downloading Windows DeskClient"
                wget --user="${HTTP_USERNAME}" --password="${HTTP_PASSWORD}" {{ include "deskclient-downloads.windowsDeskclientUrl" . }} --verbose;
                echo "Downloading macOS DeskClient"
                wget --user="${HTTP_USERNAME}" --password="${HTTP_PASSWORD}" {{ include "deskclient-downloads.macDeskclientUrl" . }} --verbose;
                echo "Downloading Linux DeskClient"
                wget --user="${HTTP_USERNAME}" --password="${HTTP_PASSWORD}" {{ include "deskclient-downloads.linuxDeskclientUrl" . }} --verbose;
                mv ./* /deskclients
                echo "Finished downloading and copying DeskClients"
                echo "{{ .Values.sophoraDownload.version }}" > /deskclients/version.txt
              fi
          volumeMounts:
            - name: updatesite
              mountPath: /updatesite
            - name: deskclients
              mountPath: /deskclients
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: {{ .failureThreshold }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: {{ .failureThreshold }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: {{ .failureThreshold }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
          {{- end }}
          volumeMounts:
            - name: updatesite
              mountPath: /usr/share/nginx/html/updatesite
            - name: nginx-config
              subPath: nginx.conf
              mountPath: /etc/nginx/conf.d/default.conf
            - name: nginx-config
              subPath: index.html
              mountPath: /usr/share/nginx/html/index.html
            - name: nginx-config
              subPath: favicon.ico
              mountPath: /usr/share/nginx/html/favicon.ico
            - name: deskclients
              mountPath: /usr/share/nginx/html/deskclients
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: nginx-config
          configMap:
            name: {{ include "deskclient-downloads.fullname" . }}
        - name: updatesite
          persistentVolumeClaim:
            claimName: updatesite
        - name: deskclients
          persistentVolumeClaim:
            claimName: deskclients
  volumeClaimTemplates:
    - metadata:
        name: deskclients
        labels: {{- include "deskclient-downloads.selectorLabels" . | nindent 10 }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.storageClassName }}
        resources:
          requests:
            storage: 5Gi
    - metadata:
        name: updatesite
        labels: {{- include "deskclient-downloads.selectorLabels" . | nindent 10 }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.storageClassName }}
        resources:
          requests:
            storage: 2Gi
