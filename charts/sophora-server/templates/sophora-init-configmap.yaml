apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "sophora-server.configs" . }}
  labels:
  {{- include "sophora-server.labels" . | nindent 4 }}
data:
  sophora.properties: |-
    {{- if .Values.sophora.server.persistence.postgres.versionStoreEnabled }}
    # postgres authentication
    sophora.persistence.postgres.username=${SOPHORA_PERSISTENCE_POSTGRES_USERNAME}
    sophora.persistence.postgres.password=${SOPHORA_PERSISTENCE_POSTGRES_PASSWORD}
    sophora.persistence.postgres.hostname=${SOPHORA_PERSISTENCE_POSTGRES_HOSTNAME}
    sophora.persistence.postgres.port=${SOPHORA_PERSISTENCE_POSTGRES_PORT}
    {{- end }}

    # custom config
    {{- toString (required "A valid sophora.properties configuration needs to be provided." .Values.sophora.server.properties) | nindent 4  }}

  config-setup.sh: |-
    # matches the index of the pod 0..n
    PODID=$(echo "$POD_NAME" | sed 's:.*-::')

    # sophora.properties
    ##############

    envsubst < /configs/sophora.properties > /sophora-properties/sophora.properties
    echo "Generated sophora.properties from ENV"

    # xml configs
    ##############

    # envsubst will substitude the following variables with themself, effectively ignoring them
    env 'rep.home=${rep.home}' > /dev/null
    env 'wsp.home=${wsp.home}' > /dev/null
    env 'wsp.name=${wsp.name}' > /dev/null

    # https://stackoverflow.com/a/12873723
    SED_XML_ESCAPE='s/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g; s/"/\&quot;/g; s/'"'"'/\&#39;/g'

    # repository.xml
    {{- if eq .Values.sophora.server.persistence.repositoryType "mysql" }}
    eval "export REPOSITORY_MYSQL_HOST=\${REPOSITORY_MYSQL_HOST_${PODID}}"
    eval "export REPOSITORY_MYSQL_USER=\${REPOSITORY_MYSQL_USER_${PODID}}"
    eval "export REPOSITORY_MYSQL_PASSWORD=\${REPOSITORY_MYSQL_PASSWORD_${PODID}}"
    export REPOSITORY_MYSQL_PASSWORD=$(echo $REPOSITORY_MYSQL_PASSWORD | sed "$SED_XML_ESCAPE")
    {{- end }}
    {{- if eq .Values.sophora.server.persistence.repositoryType "postgres" }}
    export SOPHORA_PERSISTENCE_POSTGRES_PASSWORD=$(echo $SOPHORA_PERSISTENCE_POSTGRES_PASSWORD | sed "$SED_XML_ESCAPE")
    {{- end }}
    envsubst < /sophora-repository-template/repository.xml > /sophora-repository/repository.xml
    envsubst < /sophora-repository-template/workspace.default.xml > /sophora-repository/workspace.default.xml
    envsubst < /sophora-repository-template/workspace.live.xml > /sophora-repository/workspace.live.xml
    echo "Generated repository.xml, workspace.default.xml, and workspace.live.xml from ENV"

    {{/* Archive */}}
    {{- if eq .Values.sophora.server.persistence.archiveType "mysql" }}
    eval "export ARCHIVE_MYSQL_HOST=\${ARCHIVE_MYSQL_HOST_${PODID}}"
    eval "export ARCHIVE_MYSQL_USER=\${ARCHIVE_MYSQL_USER_${PODID}}"
    eval "export ARCHIVE_MYSQL_PASSWORD=\${ARCHIVE_MYSQL_PASSWORD_${PODID}}"
    export ARCHIVE_MYSQL_PASSWORD=$(echo $ARCHIVE_MYSQL_PASSWORD | sed "$SED_XML_ESCAPE")
    {{- end }}
    {{- if or (eq .Values.sophora.server.persistence.archiveType "mysql") (eq .Values.sophora.server.persistence.archiveType "localdb") }}
    envsubst < /sophora-archive-template/repository.xml > /sophora-archive/repository.xml
    envsubst < /sophora-archive-template/workspace.default.xml > /sophora-archive/workspace.default.xml
    echo "Generated repository.xml and workspace.default.xml for archive from ENV"
    {{- end }}

  {{- if .Values.sophora.acs.url }}
  acs.properties: |-
    sophora.acs.addon.serviceUrl={{ .Values.sophora.acs.url }}
  {{- end }}
