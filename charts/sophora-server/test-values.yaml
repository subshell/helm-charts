nameOverride: sophora-server-this-is-a-very-long-nameOverride

replicaCount: 3

image:
  tag: "4.0.0"
  pullPolicy: Always

imagePullSecrets:
  - name: docker-subshell

podLabels:
  istio/inject: true

additionalSelectorLabels:
  sophora.cloud/app: cluster-server

extraJavaOptions: "-XX:+UseLargePages"

serverModeLabeler:
  enabled: true

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: sophora.cloud/app
              operator: In
              values:
                - cluster-server

sophora:
  server:
    logback: |
      <?xml version="1.0" encoding="UTF-8"?>
      <configuration scan="true" scanPeriod="60 seconds">
        Test Logback
      </configuration>
    isClusterServer: true
    storage:
      storageClass: ssd
      resources:
        requests:
          storage: 200Gi
    persistence:
      repositoryType: postgres
      archiveType: none
      mysql:
        repositories:
          - secretName: repository-secret01
            hostnameKey: new-hostname
      postgres:
        versionStoreEnabled: true
        hostname: my-host
        port: 5432
        secret:
          name: postgres-auth
          usernameKey: user1
          passwordKey: pass1
        repository:
          defaultWorkspaceDB: "repository"
          liveWorkspaceDB: "repository"
          jcrVersionsDB: "repository"

    binaryStore:
      s3:
        secret:
          name: sophora-cloud-binary-store-credentials

    authentication:
      secret:
        name: sophora-user-admin-credentials

    env:
      - name: SOPHORA_INITIALADMINUSERS_0_USERNAME
        value: admin
      - name: SOPHORA_INITIALADMINUSERS_0_PASSWORD
        value: 69madweasels

    properties: |-
      sophora.home=/sophora

configInitializer:
  env:
    - name: A
      value: B
  envFrom:
    - configMapRef:
        name: sophora-server-post-restore-vars

service:
  annotations:
    networking.gke.io/load-balancer-type: "Internal"
    networking.gke.io/internal-load-balancer-subnet: "gke-sophora-services"
  type: LoadBalancer
  loadBalancerIP: 1.2.3.4

serviceAccount:
  create: true
  automount: true
  annotations:
    foo: bar

serviceMonitor:
  enabled: true

ingress:
  enabled: true
  ingressClassName: nginx
  hosts:
    - host: "sophora.domain.de"

grpcIngress:
  enabled: true
  ingressClassName: nginx
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
  hosts:
    - host: "sophora.domain.de"
      path: /sophora\.grpc.*

extraDeploy:
  - |
    apiVersion: keda.sh/v1alpha1
    kind: ScaledObject
    metadata:
      name: sophora-server
    spec:
      scaleTargetRef:
        name: sophora-server
      maxReplicaCount: 1
      minReplicaCount: 0
      pollingInterval: 30
      triggers:
      - type: cron
        metadata:
          timezone: Europe/Berlin
          start: 0 6 * * 1,2,3,4,5
          end: 0 23 * * 1,2,3,4,5
          desiredReplicas: "1"

tolerations:
  - effect: NoSchedule
    key: sophora-cluster-server
    operator: Exists

extraContainers:
  - name: cloud-sql-proxy
    image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.10.1
    args:
      - "--private-ip"
      - "--structured-logs"
      - "--port=<DB_PORT>"
      - "<INSTANCE_CONNECTION_NAME>"

    securityContext:
      runAsNonRoot: true
    resources:
      requests:
        memory: "2Gi"
        cpu: "1"

extraInitContainers:
  - name: cloud-sql-proxy
    image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.10.1
    args:
      - "--private-ip"
      - "--structured-logs"
      - "--port=<DB_PORT>"
      - "<INSTANCE_CONNECTION_NAME>"

    securityContext:
      runAsNonRoot: true
    resources:
      requests:
        memory: "2Gi"
        cpu: "1"

extraVolumeClaimTemplates:
  - metadata:
      name: custom
      labels: [ "label1" ]
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
      storageClassName: "premium"

extraVolumeMounts:
  - mountPath: /foo
    name: bar
    subPath: baz

extraVolumes:
  - name: bar
    persistentVolumeClaim:
      claimName: bar

resources:
  requests:
    memory: "12G"
    cpu: "2"
  limits:
    memory: "12G"

podDisruptionBudget:
  enabled: false
  minAvailable: 1
  maxUnavailable: ""

prometheusRule:
  enabled: true
  defaultRulesEnabled: true
  rules:
    - name: Test
      for: 11m
      expr: 'expr'
      labels:
        severity: high
      annotations:
        summary: My summary
        description: Test description
        runbook_url: 'https://github.com/subshell/helm-charts/blob/main/charts/sophora-server/alerting-runbook.md'
