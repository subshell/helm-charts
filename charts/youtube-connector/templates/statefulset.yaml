apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "youtube-connector.fullname" . }}
  labels:
    {{- include "youtube-connector.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "youtube-connector.fullname" . }}
  selector:
    matchLabels:
      {{- include "youtube-connector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "youtube-connector.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: envsubst-config-generator
          image: "{{ .Values.configGenerator.image.repository }}:{{ .Values.configGenerator.image.tag }}"
          imagePullPolicy: {{ .Values.configGenerator.image.pullPolicy }}
          {{- if .Values.configGenerator.extraEnvVarsSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.configGenerator.extraEnvVarsSecret }}
                optional: true
          {{- end }}
          {{ if .Values.configGenerator.env -}}
          env: {{- toYaml .Values.configGenerator.env | nindent 10 }}
          {{- end }}
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              envsubst < /mediaconfig-configmap-template/mediaconfig.xml > /youtube-connector/mediaconfig.xml
              echo "Generated /{{ include "youtube-connector.fullname" . }}-mediaconfig/mediaconfig.xml from ENV"
          volumeMounts:
            - name: {{ include "youtube-connector.fullname" . }}-mediaconfig-template
              mountPath: /mediaconfig-configmap-template
            - name: {{ include "youtube-connector.fullname" . }}-mediaconfig
              mountPath: /youtube-connector
      volumes:
        - name: {{ include "youtube-connector.fullname" . }}-mediaconfig-template
          configMap:
            name: {{ include "youtube-connector.fullname" . }}-mediaconfig
        - name: {{ include "youtube-connector.fullname" . }}-mediaconfig
          emptyDir: {}
        - name: {{ include "youtube-connector.fullname" . }}-config
          configMap:
            name: {{ include "youtube-connector.fullname" . }}-config
        - name: logback
          configMap:
            name: {{ include "youtube-connector.fullname" . }}-logback
        {{- with .Values.extraVolumes}}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: JAVA_TOOL_OPTIONS
            value: {{ .Values.javaOptions }}
          - name: SOPHORASERVER_USERNAME
            valueFrom:
              secretKeyRef:
                key: {{.Values.sophora.youtubeconnector.secret.server.usernameKey}}
                name: {{.Values.sophora.youtubeconnector.secret.name}}
          - name: SOPHORASERVER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: {{.Values.sophora.youtubeconnector.secret.server.passwordKey}}
                name: {{.Values.sophora.youtubeconnector.secret.name}}
          {{ if .Values.sophora.youtubeconnector.env -}}
          {{- toYaml .Values.sophora.youtubeconnector.env | nindent 10 }}
          {{- end }}
          {{- if .Values.sophora.youtubeconnector.extraEnvVarsSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.sophora.youtubeconnector.extraEnvVarsSecret }}
                optional: true
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: {{ include "youtube-connector.fullname" . }}-config
              mountPath: /app/config/application.{{ .Values.sophora.youtubeconnector.configFormat }}
              subPath: application.{{ .Values.sophora.youtubeconnector.configFormat }}
            - name: {{ include "youtube-connector.fullname" . }}-mediaconfig
              mountPath: /app/mediaconfig.xml
              subPath: mediaconfig.xml
            - name: logback
              mountPath: /app/logback.xml
              subPath: logback.xml
            - name: yt-jobstore
              mountPath: /app/jobstore/
            - name: yt-oauth
              mountPath: /root/.oauth-credentials/
            {{- with .Values.extraVolumeMounts}}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: yt-jobstore
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
        {{- toYaml .Values.sophora.youtubeconnector.jobstore.storage.resources | nindent 10 }}
        storageClassName: {{ .Values.sophora.youtubeconnector.jobstore.storage.storageClass }}
    - metadata:
        name: yt-oauth
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
        {{- toYaml .Values.sophora.youtubeconnector.oauth.storage.resources | nindent 10 }}
        storageClassName: {{ .Values.sophora.youtubeconnector.oauth.storage.storageClass }}
