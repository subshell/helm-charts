image:
  repository: docker.subshell.com/sophora/program-data-importer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

nodeSelector: {}
imagePullSecrets: 
  - name: regcred
nameOverride: ""
fullnameOverride: ""

javaOptions: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=80.0 -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem"

# - (object) k8s Pod host aliases which will be used to generate the /etc/hosts file
hostAliases:

sophora:
  authentication:
    secret:
      name: sophora-user
      usernameKey: username
      passwordKey: password
  
  programDataImporter:
    storage:
      size: 100
    initialTimestamp: 2024-02-19T10:55:30.015145Z
    
    config:
      sophora:
        client:
          server-connection:
            urls: [""]
            username: "<user>"
            password: "<password>"
      programm-data-importer:
        data-path: "timestamp/"
      schedule:
        cron: "*/30 * * * * *" #  Spring CronExpression to schedule polling of the PlanARD API
      management:
        endpoints.web.exposure.include: sophora, info, health, jolokia, threaddump, prometheus
        endpoint:
          health:
            show-details: always
            show-components: always
            enabled: true
        metrics:
          tags:
            application: ${spring.application.name}
        server:
          port: 8081
      
      spring:
        application:
          name: Subshell Spring Boot Template Application
        profiles:
          active: prod
      
      server:
        error:
          include-stacktrace: NEVER
        port: 8080

logbackXml: |
  <?xml version="1.0" encoding="UTF-8"?>
  <configuration scan="true" scanPeriod="60 seconds">
  <include resource="org/springframework/boot/logging/logback/defaults.xml" />
  
  <property name="APPENDER_PATTERN" value="%d{dd.MM.yyyy HH:mm:ss} %highlight(%5level) [%10.10thread] %-30.30(%logger{0}:%L): %msg%n%wex" />
  
  <logger name="com.subshell" level="INFO" />
  <logger name="com.subshell.template" level="INFO" />
  
  <springProfile name="!prod">
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
  <encoder>
  <pattern>${APPENDER_PATTERN}</pattern>
  </encoder>
  </appender>
  <root level="WARN">
  <appender-ref ref="STDOUT" />
  </root>
  </springProfile>
  
  <springProfile name="prod">
  <appender name="jsonConsoleAppender" class="ch.qos.logback.core.ConsoleAppender">
  <encoder class="net.logstash.logback.encoder.LogstashEncoder" />
  </appender>
  <root level="WARN">
  <appender-ref ref="jsonConsoleAppender" />
  </root>
  </springProfile>
  
  </configuration>


podAnnotations: {}

service:
  annotations: {}
  clusterIP: None
  httpPort: 80

ingress:
  enabled: false
  annotations: {}
  hosts:
  tls: []
