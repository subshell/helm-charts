apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sophora-ugc.fullname" . }}
  labels:
    {{- include "sophora-ugc.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "sophora-ugc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/ugc-config.yaml") . | sha256sum }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sophora-ugc.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.ugc.hostname }}
      hostname: {{ .Values.ugc.hostname }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.ugc.extraInitContainers }}
          {{ include "common.tplvalues.render" (dict "value" .Values.ugc.extraInitContainers "context" $) | nindent 8 }}
        {{- end }}
      serviceAccountName: {{ include "sophora-ugc.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.ugc.image.repository }}:{{ .Values.ugc.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.ugc.image.pullPolicy }}
          env:
            - name: JAVA_TOOL_OPTIONS
              value: {{ .Values.javaOptions }}
            {{- if .Values.authentication.secret.server.usernameKey }}
            - name: SOPHORA-SERVER_USERNAME
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.authentication.secret.server.usernameKey }}
                  name: {{ .Values.authentication.secret.server.name }}
                  optional: true
            {{- end }}
            {{- if .Values.authentication.secret.server.passwordKey }}
            - name: SOPHORA-SERVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.authentication.secret.server.passwordKey }}
                  name: {{ .Values.authentication.secret.server.name }}
                  optional: true
            {{- end }}
            {{- if .Values.authentication.secret.database.usernameKey }}
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.authentication.secret.database.usernameKey }}
                  name: {{ .Values.authentication.secret.database.name }}
                  optional: true
            {{- end }}
            {{- if .Values.authentication.secret.database.passwordKey }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.authentication.secret.database.passwordKey }}
                  name: {{ .Values.authentication.secret.database.name }}
                  optional: true
            {{- end }}
            {{- if .Values.authentication.secret.s3bucket.accessKeyKey }}
            - name: SUBMISSIONS_S3_ACCESSKEYID
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.authentication.secret.s3bucket.accessKeyKey }}
                  name: {{ .Values.authentication.secret.s3bucket.name }}
                  optional: true
            {{- end }}
            {{- if .Values.authentication.secret.s3bucket.secretIdKey }}
            - name: SUBMISSIONS_S3_SECRETACCESSKEY
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.authentication.secret.s3bucket.secretIdKey }}
                  name: {{ .Values.authentication.secret.s3bucket.name }}
            {{- end }}
            {{ if .Values.env -}}
            {{- toYaml .Values.env | nindent 12 }}
            {{- end }}
          ports:
            - containerPort: {{ default 8080 (.Values.ugc.config.server).port }}
              name: webapp
            - containerPort: 1694
              name: jolokia
          volumeMounts:
            - name: logback-xml
              mountPath: /config/logback
            - name: application-yml
              mountPath: /config/application
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.ugc.extraContainers }}
          {{ include "common.tplvalues.render" (dict "value" .Values.ugc.extraContainers "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: application-yml
          configMap:
            name: {{ include "sophora-ugc.fullname" . }}-config
        - name: logback-xml
          configMap:
            name: {{ include "sophora-ugc.fullname" . }}-logback
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
