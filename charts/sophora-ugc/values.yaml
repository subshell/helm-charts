replicaCount: 1

imagePullSecrets: []

javaOptions: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=80.0 -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

service:
  annotations: {}
  jolokia:
    clusterIP: None
  webapp:
    type: LoadBalancer
    loadBalancerIP:

ingress:
  enabled: false
  ingressClassName: nginx
  tls:
  hosts:
  annotations: {}


authentication:
  secret:
    server:
      name: secret-name
      usernameKey: username
      passwordKey: password
    database:
      name: secret-name
      usernameKey: database-user
      passwordKey: database-password
    binarystore:
      name: secret-name
      accessKeyKey: binarystore-access-key
      secretIdKey: binarystore-secret-id
    s3bucket:
      name: s3bucket-secret
      accessKeyKey: s3bucket-access-key
      secretIdKey: s3bucket-secret-id

ugc:
  image:
    repository: docker.subshell.com/ugc/ugc
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  hostname: ""
  nameOverride: ""
  fullnameOverride: ""
  logback: |
    <?xml version="1.0" encoding="UTF-8"?>
    <configuration scan="true">
        <jmxConfigurator />
        <!-- Propagate level settings to java.util.logging. -->
        <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"/>
        <appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <File>/logs/ugc-webapp.log</File>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>/logs/ugc.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>7</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>[%d{"yyyy-MM-dd HH:mm:ss.SSSX",UTC}, %-5p] [%t] [%X{ID}] %.30c:%L: %m%n</pattern>
            </encoder>
        </appender>
        <appender name="errorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>ERROR</level>
            </filter>
            <File>/logs/error.log</File>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>/logs/error.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>7</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>[%d{"yyyy-MM-dd HH:mm:ss.SSSX",UTC}, %-5p] [%t] [%X{ID}] %.40c:%L: %m%n</pattern>
            </encoder>
        </appender>
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level [%X{ID}] %logger{36} - %msg%n</pattern>
            </encoder>
        </appender>
        <logger name="com.subshell.sophora.ugc" level="INFO" />
        <root level="WARN">
            <appender-ref ref="STDOUT" />
            <appender-ref ref="logfile" />
            <appender-ref ref="errorLog" />
        </root>
    </configuration>
  config:
    sophora-server:
      host: 
    database:
      url:

ugcMultimedia:
  enabled: false
  image:
    repository: docker.subshell.com/ugc/ugc-multimedia
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  name: "ugc-multimedia"
  fullnameOverride: ""
  binariesStorage:
    size: 1G
    storageClass: standard
  hostname:
  logback: |
    <?xml version="1.0" encoding="UTF-8"?>
    
    <configuration scan="true" scanPeriod="60 seconds">
    <jmxConfigurator />
    
    <!-- Propagate level settings to java.util.logging. -->
    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"/>
    
    <appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>logs/ugc-multimedia.log</File>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    <fileNamePattern>logs/ugc-multimedia.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
    <maxHistory>7</maxHistory>
    </rollingPolicy>
    <encoder>
    <pattern>[%d{ISO8601}, %-5p] [%t] [%X{ID}] %.30c:%L: %m%n</pattern>
    </encoder>
    </appender>
    <appender name="errorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
    <level>ERROR</level>
    </filter>
    <File>logs/ugc-multimedia-error.log</File>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    <fileNamePattern>logs/ugc-multimedia-error.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
    <maxHistory>7</maxHistory>
    </rollingPolicy>
    <encoder>
    <pattern>[%d{ISO8601}, %-5p] [%t] [%X{ID}] %.40c:%L: %m%n</pattern>
    </encoder>
    </appender>
    
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
    <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level [%X{ID}] %logger{36} - %msg%n</pattern>
    </encoder>
    </appender>
    
    <logger name="com.subshell.sophora.ugc.services" level="DEBUG" />
    <logger name="org.springframework" level="INFO" />
    
    <root level="INFO">
    <appender-ref ref="logfile" />
    <appender-ref ref="STDOUT" />
    <appender-ref ref="errorLog" />
    </root>
    </configuration>
  config:
    storage:
      type: fs
      fs:
        baseDir: /binaries/

# Additional environment variables can be defined here
env:

resources:
  requests:
    cpu: "200m"
    memory: "2.5G"
  limits:
    memory: "2.5G"


nodeSelector: {}

tolerations: []

affinity: {}
