replicaCount: 1

image:
  repository: docker.subshell.com/ugc/ugc-multimedia
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: regcred
nameOverride: ""
fullnameOverride: ""

javaOptions: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=80.0 -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

service:
  annotations: {}
  jolokia:
    clusterIP: None
  webapp:
    type: LoadBalancer
    loadBalancerIP:

ingress:
  enabled: false
  ingressClassName: nginx
  tls:
  hosts:
  annotations: {}

sophora:
  authentication:
    secret:
      name: sophora-user
      usernameKey: username
      passwordKey: password
      database:
        usernameKey: database-user
        passwordKey: database-password
  ugcMultimedia:
    hostname: ""
    logback: |
      <?xml version="1.0" encoding="UTF-8"?>
  
      <configuration scan="true" scanPeriod="60 seconds">
      <jmxConfigurator />
    
      <!-- Propagate level settings to java.util.logging. -->
      <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"/>
    
      <appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <File>logs/ugc-multimedia.log</File>
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>logs/ugc-multimedia.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
      <maxHistory>7</maxHistory>
      </rollingPolicy>
      <encoder>
      <pattern>[%d{ISO8601}, %-5p] [%t] [%X{ID}] %.30c:%L: %m%n</pattern>
      </encoder>
      </appender>
      <appender name="errorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>ERROR</level>
      </filter>
      <File>logs/ugc-multimedia-error.log</File>
      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>logs/ugc-multimedia-error.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
      <maxHistory>7</maxHistory>
      </rollingPolicy>
      <encoder>
      <pattern>[%d{ISO8601}, %-5p] [%t] [%X{ID}] %.40c:%L: %m%n</pattern>
      </encoder>
      </appender>
    
      <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
      <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level [%X{ID}] %logger{36} - %msg%n</pattern>
      </encoder>
      </appender>
    
      <logger name="com.subshell.sophora.ugc.services" level="DEBUG" />
      <logger name="org.springframework" level="INFO" />
    
      <root level="INFO">
      <appender-ref ref="logfile" />
      <appender-ref ref="STDOUT" />
      <appender-ref ref="errorLog" />
      </root>
      </configuration>

    config: 
      spring:
        jpa:
          hibernate:
            ddl-auto: update
          database-platform: org.hibernate.dialect.MySQL5InnoDBDialect # org.hibernate.dialect.Oracle12cDialect
          database: mysql # oracle
        datasource:
          url: jdbc:mysql://host.docker.internal:3306/ugc
          username: admin
          password: admin
          driver-class-name: com.mysql.cj.jdbc.Driver # oracle.jdbc.OracleDriver
        servlet:
          multipart:
            max-file-size: 20MB
            max-request-size: 20MB
      
      management:
        endpoints:
          web:
            exposure:
              include: "prometheus"
        endpoint:
          prometheus:
            enabled: true
      
      sophora:
        client:
          server-connection:
            urls: http://4.buero.subshell.io:1196
            username: ${SOPHORA-SERVER_USERNAME}
            password: ${SOPHORA-SERVER_PASSWORD}
      
      storage:
        type: fs
        fs:
          baseDir: /binaries/
        # Configuration for s3
        # type: s3
        # s3:
        #   accessKeyId: <accessKeyId>
        #   secretAccessKey: <secretAccessKey>
        #   bucketName: <bucketName>
        #   host: <host>
      
      multimedia:
        allowedMimeTypes:
          - audio
          - video
        headlineProperty: sophora-content:title
        markers:
          - key: "key1"
            label: "topic 1"
            colorValue: "Red"
          - key: "key 2"
            label: "topic 2"
            colorValue: "Gold"
          - key: "key 3"
            label: "topic 3"
            colorValue: "Green"
      
      clamd:
        clamdHost:
        clamdPort: 0
        timeoutInMS: 10
        clamdFileStorageDir: clamdTest/
        httpStatusCodeForVirus: 200
      
      cleanup:
        binaries:
          enabled: false
          cronSchedule: "0 59  * * * *"
          regexForBinaries: "[a-z0-9-]{36,}" #Regex for UUIDs
          binaryWasAtLeastNotModifiedSinceHours: 0
        metadata:
          enabled: false
          cronSchedule: "0 59  * * * *"
          minimumAgeInHours: 0
      
      headers:
        crossOriginUrl: "http://localhost:8080"
      
      websocket:
        allowedOrigin: http://localhost:9000
      
      springdoc:
        swagger-ui:
          url: "/v3/api-docs"
          disable-swagger-default-url: true
          csrf:
            enabled: true

resources:
  requests:
    cpu: "200m"
    memory: "2.5G"
  limits:
    memory: "2.5G"